# Project object
type Project {
  id: ID
  createdAt: Date
  updatedAt: Date
  ownerId: ID
  name: String
  slug: String
  description: String
  cdnToken: String
  locales: [Locale]
  translationKeyPage: TranslationKeyPage
  stats: Stats
}

type CreateProjectResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
  project: Project
}

type AddLocaleToProjectResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
}

type AddTranslationKeyToProjectResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
}

extend type Mutation {
  # Create a new project
  createProject(
    name: String!
    defaultLocaleId: ID!
    description: String
  ): CreateProjectResponse

  # Add a locale to a project
  addLocaleToProject(
    projectId: ID!
    localeId: ID!
    shouldPrefillTranslations: Boolean!
  ): AddLocaleToProjectResponse

  # Add a new translation key to a project
  addTranslationKeyToProject(
    projectId: ID!
    key: String
  ): AddTranslationKeyToProjectResponse
}

extend type Query {
  # Get all available projects
  getProjects: [Project]

  # Get a single project
  getProject(
    projectSlug: String!
    pageSize: Int
    page: Int
    filters: [String]
    search: String
  ): Project
}
