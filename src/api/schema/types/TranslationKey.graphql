# Translation key object
type TranslationKey {
  id: ID
  key: String
  project: Project
  translationValues: [TranslationValue]
  isNew: Boolean
  hasMissingTranslations: Boolean
}

# Translation keys paginated object
type TranslationKeyPage {
  pageSize: Int!
  page: Int!
  previousPage: Int
  nextPage: Int
  totalCount: Int
  translationKeys: [TranslationKey]
}

type AddTranslationValueToTranslationKeyResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
}

type PrefillTranslationValueResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
}

type DeleteTranslationKeyResponse {
  status: ResponseStatus!
  errors: [ValidationError]!
}

extend type Mutation {
  # Add a new translation value for a locale to a translation key
  addTranslationValueToTranslationKey(
    value: String
    translationKeyId: ID!
    localeId: ID!
  ): AddTranslationValueToTranslationKeyResponse

  # Fetch automatic translation for a given key and locale
  prefillTranslationValue(
    value: String
    translationKeyId: ID!
    localeId: ID!
  ): PrefillTranslationValueResponse

  # Delete a translation key
  deleteTranslationKey(translationKeyId: ID!): DeleteTranslationKeyResponse
}
